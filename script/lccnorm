#!/usr/bin/perl -w

# lccnorm by Paul Hoffman (nkuitse AT nkuitse DOT com).
# Copyright 2007 Paul M. Hoffman.
# This software is made available under the same terms as Perl;
# see below for details.

use strict;

# -------------------------------- Required modules

use Biblio::LCC;
use File::Basename qw(basename);
use Getopt::Long
    qw(:config posix_default gnu_compat require_order bundling no_ignore_case);

# -------------------------------- Variables

use vars qw($PROGRAM $VERSION $AUTHOR $COPYRIGHT $PAGER);

$PROGRAM = basename($0);
$VERSION = '0.08';
$AUTHOR  = 'Paul Hoffman (nkuitse AT nkuitse DOT com)';
$COPYRIGHT = "Copyright 2007 Paul M. Hoffman";

my $action = \&run;
my $verbose;

my $in_delim = "\t";
my $out_join;
my ($i, $j) = (0, 0);  # Field(s) that contain the call no. (or range)
my ($output_pos, $copy, $at_beginning, $at_end, $input_is_ranges, $errors_are_fatal);

# -------------------------------- Setup

$| = 1;

# -------------------------------- Read command-line options and arguments

GetOptions(

    'f|fields=s' => sub {
        my $field_spec = $_[1];
        if ($field_spec =~ /^(\d+)-(\d+)$/) {
            ($i, $j) = ($1 - 1, $2 - 1);
            exit usage("Invalid field spec: end must be greater than beginning")
                unless $i < $j;
            exit usage("Invalid field spec: must be 1, 2, 3, or 4 fields")
                unless $j - $i < 4;
        }
        elsif ($field_spec =~ /^(\d+)$/) {
            ($i, $j) = ($1 - 1, $1 - 1);
        }
    },
    'r|ranges'      => \$input_is_ranges,
    
    'd|delimiter=s' => \$in_delim,
    'j|join=s'      => \$out_join,

    'c|copy'        => \$copy,
    'b|beginning'   => \$at_beginning,
    'e|end'         => \$at_end,
    
    'D|die-on-error' => \$errors_are_fatal,
    'v|verbose'       => \$verbose,
    
    'h|help'     => sub { $action = \&help },
    'V|version'  => sub { $action = \&version },
    'M|manual'   => sub { $action = \&manual },
    'L|license'  => sub { $action = \&license },

) or exit usage();

$out_join = $in_delim unless defined $out_join;
$in_delim = qr/\Q$in_delim\E/ if defined $in_delim;

if ($copy) {
    exit usage("Must specify -b|--beginning or -e|--end when using option -c|--copy")
        unless $at_beginning or $at_end;
}

# -------------------------------- Perform the desired action

$action->();

# -------------------------------- Action functions

sub run {

    # --- Figure out how to convert fields to a range string
    
    # Number of fields that hold the call number or range
    my $n = $j - $i + 1;
    
    # Function to construct an (unnormalized) call number or range from the input fields
    my $field2str;
    
    if ($n == 1) {
        # Ranges: ("E184-E184.5") --> "E184-E184.5"
        # Call #: ("Z699.22 .H54 1982")
        $field2str = sub { $_[0] };
    }
    elsif ($n == 2) {
        # Ranges: ("E184", "E184.5") --> "E184-E184.5"
        # Call #: ("Z", "699.22 .H54 1982") or some such
        $field2str = $input_is_ranges
            ? sub { join('-', @_) }
            : sub { join(' ', @_) };
    }
    elsif ($n == 3) {
        # ("E", "184", "184.5") --> "E184-E184.5"
        # Call #: ("Z", "699.22", ".H54 1982") or some such
        $field2str = $input_is_ranges
            ? sub { "$_[0] $_[1]-$_[0] $_[2]" }
            : sub { join(' ', @_) };
    }
    elsif ($n == 4) {
        # ("E", "184", "E", "184.5") --> "E184-E184.5"
        # Call #: ("Z", "699.22", ".H54", "1982") or some such
        $field2str = $input_is_ranges
            ? sub { "$_[0] $_[1]-$_[2] $_[3]" }
            : sub { join(' ', @_) };
    }
    else {
        die "This can't happen, because we eliminated this possibility earlier";
    }
    
    # --- Process the input (finally!)
    
    my $line_num = 1;
    while (<>) {
        chomp;
        my $line = $_;

        # --- Split the line up into fields
        my @fields = split /$in_delim/;

        # --- Isolate the fields that hold the call number (or range) from
        #     those (if any) that precede and follow them
        my (@before, @callnum, @after);
        @before = splice @fields, 0, $i
            if $i > 0;
        @callnum = splice @fields, 0, $n;
        @after = @fields;

        my @result;

        # --- Normalize the call number or range
        if ($input_is_ranges) {
            my $range = $field2str->(@callnum);
            eval {
                @result = Biblio::LCC->normalize_range($range);
            };
        }
        else {
            my $callnum = $field2str->(@callnum);
            eval {
                @result = (Biblio::LCC->normalize($callnum));
            };
        }
        if ($@) {
            print STDERR "Error in input line $line_num: $line\n";
            exit 2 if $errors_are_fatal;
            next;
        }
        my @output;
        if ($copy) {
            @output = $at_beginning
                ? (@result, @before, @callnum, @after)
                : (         @before, @callnum, @after, @result)
                ;
        }
        else {
            @output = $at_beginning
                ? (@result, @before,           @after)
                : $at_end
                    ? ( @before, @after, @result )
                    : ( @before, @result, @after )
                ;
        }
        print join($out_join, @output), "\n";
    }
    continue {
        $line_num++;
    }
}

sub help {
    usage();
    options();
    exit 0;
}

sub version {
    print "This is $PROGRAM " if $verbose;
    print $VERSION;
    print <<"EOS" if $verbose;
 by $AUTHOR.
$COPYRIGHT.
This is free software, made available under the same terms as Perl itself.
EOS
    print "\n" unless $verbose;
    exit 0;
}

sub manual {
    system(podder()) == 0
        or print STDERR "I can't find a way to print the manual page for $PROGRAM.\n";
}

sub license {
    my $pager = pager();
    if ($pager and which('sed')) {
        system(qq{sed '/^This software is made available/,/^The End/!d' "$0" | "$pager"});
    } else {
        print STDERR "I can't find a way to print the license for $PROGRAM\n";
    }
}

# -------------------------------- Other functions

sub options {
    print <<"EOS";
Options:
  -f|--fields RANGE   Field(s) containing the call number (or range)
  -r|--ranges         Input is ranges
  
  -d|--delimiter STR  Input delimiter (default: tab)
  -j|--join STR       Output delimiter (default: same as for input)

  -c|--copy           Don't delete source fields
  -b|--beginning      Put normalized string at beginning of line
  -e|--end            Put normalized string at end of line
  
  -D|--die-on-error   Exit with an error as soon as an error is encountered
  -v|--verbose        Be verbose
  
  -h|--help           Print help and exit
  -V|--version        Print version and exit
  -M|--manual         Print manual (using pager) and exit
  -L|--license        Print license (using pager) and exit
EOS
}

sub usage {
    print STDERR "$_\n" foreach @_;
    print <<"EOS";
Usage:
  $PROGRAM [OPTION...] [FILE...]
EOS
    return 1;
}

sub pager {
    return $PAGER if defined $PAGER;
    $PAGER = $ENV{'PAGER'} || which(qw(less more)) || which('cat') || 0;
    return $PAGER;
}

sub podder {
    return "cat $0 | pod2man -n $PROGRAM -s 1 -r $VERSION -c '' | nroff -man | " . pager()
        if pager() and which('pod2man') and which('nroff');
    return "man 1 $PROGRAM"
        if manpage($PROGRAM);
    return "perldoc -F $0"
        if which('perldoc');
    return undef;
}

sub which {
    my $out;
    no warnings;
    foreach my $prog (@_) {
        $out = `which $prog 2>/dev/null`;
        if (defined $out) {
            chomp $out;
            return $out if -x $out;
        }
    }
    return undef;
}

sub manpage {
    return unless which('man');
    my $out = `man -w 1 $PROGRAM 2>/dev/null`;
    return unless defined $out;
    chomp $out;
    return $out;
}

=head1 NAME

lccnorm - normalize Library of Congress Classification call numbers

=head1 SYNOPSIS

B<lccnorm> [I<option>...] [I<file>...]

B<lccnorm> B<-h>|B<--help>

B<lccnorm> B<-V>|B<--version>

=head1 DESCRIPTION

B<lccnorm> transforms LC-style call numbers into a form that may be used in a
straight ASCII sort.

By default, each line of input is assumed to consist of a number of
tab-delimited fields, of which the first contains an LC-style call number or
class.

If no file is specified, or if the file name C<-> is specified, standard input
will be processed.

Normalization of call number ranges is a special challenge, because ranges are
not normally specified using the exact endpoint.  Consider the range C<B708-B713>; while
C<B708> does indicate the beginning point -- a no call number that comes before B 708 can
fall within the range -- the end point is only a guide, not a strict limit, since the intent
is that call numbers such as C<B 713 .H94> and C<B 713 .W55 L86> B<do> fall within the
range.  Unfortunately, ranges are often specified ambiguously; for example, the call number
C<B 713.14 G92> might or might not be considered to fall within this range.

=head1 OPTIONS

=over 4

=item B<-d>, B<--delimiter> I<string>

Specify a string other than a single tab (ASCII character 9) to delimit the
fields in a line of input.  This also provides the default for joining fields
in the output; see option B<-j> below.

=item B<-f>, B<--field> I<range>

The call number (or range) is found in the given range of fields.  Fields are
1-based (the first field is field 1, not field 0) and are separated by a single
tab character (unless option B<-d> is used to specify an alternate delimiter).

When parsing call numbers (not ranges), all fields are concatenated using a
single space to form the call number that will be normalized.

When parsing ranges, there are four possibilities:

=over 4

=item 1 field

The field contains a range in the form I<prefix> (e.g., C<J80>), I<closed
range> (e.g., C<ML566-566.6> or C<ML566-ML566.6>) or I<half-open range> (e.g.,
C<< KME451E<lt>KME500 >>).

=item 2 fields

The first field is the beginning of the (closed) range, and the second is the
end.

=item 3 fields

The first field is a prefix common to both the beginning and end of the range,
and the second and third fields are the remainders.

=item 4 fields

The first and third fields together are the beginning of the range, and the
second and fourth are the end.

=back

For example, the following all produce identical output:

    $ echo 'PL4501-4509'     | lccnorm -d: -f1
    $ echo 'PL4501:PL4509'   | lccnorm -d: -f1-2
    $ echo 'PL:4501:4509'    | lccnorm -d: -f1-3
    $ echo 'PL:4501:PL:4509' | lccnorm -d: -f1-4

=item B<-j>, B<--join> I<string>

Specify a character to use when joining fields for output. The default is to use the same
string specified in option B<-d>, or a single tab if B<-d> was not given.

=item B<-c>

Don't delete the input fields from which call numbers (or ranges) were obtained.
Either the B<-b> and B<-e> option must be provided to specify where the normalized 
string is to be placed.

=item B<-b>, B<--begin>

Place normalized strings at the beginning of output lines.

=item B<-e>, B<--end>

Place normalized strings at the end of output lines.

=item B<-D>, B<--die-on-error>

Exit with a non-zero status as soon as an unnormalizable input is encountered.
The default is to issue a warning and normalize to the empty string.

=item B<-v>, B<--verbose>

Be verbose.  This currently has no effect unless used with the B<-V> or
B<--version> option.

=item B<-h>, B<--help>

Print help information and exit.

=item B<-V>, B<--version>

Print the version number and exit.  If the B<-v> or B<--verbose> option is
specified, print out additional information.

=item B<-M>, B<--manual>

View the manual page for B<lccnorm>.

=item B<-L>, B<--license>

View the license under which B<lccnorm> is distributed.

=back

=head1 AUTHOR

Paul Hoffman (nkuitse AT nkuitse DOT com)

=head1 COPYRIGHT

Copyright 2007 Paul M. Hoffman.

This module is free software; you can redistribute it and/or modify it
under the same terms as Perl:

=over 4

=item a)

the GNU General Public License as published by the Free Software
Foundation; either version 1, or (at your option) any later version;

B<or>

=item b)

the "Artistic License".

For the full text of these licenses, see the script file itself or
enter the command B<lccnorm -L>.

=back

=head1 SEE ALSO

L<Biblio::LCC|Biblio::LCC>

=begin license

This software is made available under the same terms as Perl:

   a) the GNU General Public License as published by the Free
      Software Foundation; either version 1, or (at your option) any
      later version;

or (at your option)

   b) the "Artistic License"

----------------------------------------------------------------------------

The General Public License (GPL)
Version 2, June 1991

Copyright (C) 1989, 1991 Free Software Foundation, Inc. 675 Mass Ave, Cambridge,
MA 02139, USA. Everyone is permitted to copy and distribute verbatim copies of
this license document, but changing it is not allowed.

Preamble

The licenses for most software are designed to take away your freedom to share
and change it. By contrast, the GNU General Public License is intended to
guarantee your freedom to share and change free software--to make sure the
software is free for all its users. This General Public License applies to most
of the Free Software Foundation's software and to any other program whose
authors commit to using it. (Some other Free Software Foundation software is
covered by the GNU Library General Public License instead.) You can apply it to
your programs, too.

When we speak of free software, we are referring to freedom, not price. Our
General Public Licenses are designed to make sure that you have the freedom to
distribute copies of free software (and charge for this service if you wish),
that you receive source code or can get it if you want it, that you can change
the software or use pieces of it in new free programs; and that you know you can
do these things.

To protect your rights, we need to make restrictions that forbid anyone to deny
you these rights or to ask you to surrender the rights. These restrictions
translate to certain responsibilities for you if you distribute copies of the
software, or if you modify it.

For example, if you distribute copies of such a program, whether gratis or for a
fee, you must give the recipients all the rights that you have. You must make
sure that they, too, receive or can get the source code. And you must show them
these terms so they know their rights.

We protect your rights with two steps: (1) copyright the software, and (2) offer
you this license which gives you legal permission to copy, distribute and/or
modify the software.

Also, for each author's protection and ours, we want to make certain that
everyone understands that there is no warranty for this free software. If the
software is modified by someone else and passed on, we want its recipients to
know that what they have is not the original, so that any problems introduced by
others will not reflect on the original authors' reputations.

Finally, any free program is threatened constantly by software patents. We wish
to avoid the danger that redistributors of a free program will individually
obtain patent licenses, in effect making the program proprietary. To prevent
this, we have made it clear that any patent must be licensed for everyone's free
use or not licensed at all.

The precise terms and conditions for copying, distribution and modification
follow.

GNU GENERAL PUBLIC LICENSE
TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND
MODIFICATION

0. This License applies to any program or other work which contains a notice
placed by the copyright holder saying it may be distributed under the terms of
this General Public License. The "Program", below, refers to any such program or
work, and a "work based on the Program" means either the Program or any
derivative work under copyright law: that is to say, a work containing the
Program or a portion of it, either verbatim or with modifications and/or
translated into another language. (Hereinafter, translation is included without
limitation in the term "modification".) Each licensee is addressed as "you".

Activities other than copying, distribution and modification are not covered by
this License; they are outside its scope. The act of running the Program is not
restricted, and the output from the Program is covered only if its contents
constitute a work based on the Program (independent of having been made by
running the Program). Whether that is true depends on what the Program does.

1. You may copy and distribute verbatim copies of the Program's source code as
you receive it, in any medium, provided that you conspicuously and appropriately
publish on each copy an appropriate copyright notice and disclaimer of warranty;
keep intact all the notices that refer to this License and to the absence of any
warranty; and give any other recipients of the Program a copy of this License
along with the Program.

You may charge a fee for the physical act of transferring a copy, and you may at
your option offer warranty protection in exchange for a fee.

2. You may modify your copy or copies of the Program or any portion of it, thus
forming a work based on the Program, and copy and distribute such modifications
or work under the terms of Section 1 above, provided that you also meet all of
these conditions:

a) You must cause the modified files to carry prominent notices stating that you
changed the files and the date of any change.

b) You must cause any work that you distribute or publish, that in whole or in
part contains or is derived from the Program or any part thereof, to be licensed
as a whole at no charge to all third parties under the terms of this License.

c) If the modified program normally reads commands interactively when run, you
must cause it, when started running for such interactive use in the most
ordinary way, to print or display an announcement including an appropriate
copyright notice and a notice that there is no warranty (or else, saying that
you provide a warranty) and that users may redistribute the program under these
conditions, and telling the user how to view a copy of this License. (Exception:
if the Program itself is interactive but does not normally print such an
announcement, your work based on the Program is not required to print an
announcement.)

These requirements apply to the modified work as a whole. If identifiable
sections of that work are not derived from the Program, and can be reasonably
considered independent and separate works in themselves, then this License, and
its terms, do not apply to those sections when you distribute them as separate
works. But when you distribute the same sections as part of a whole which is a
work based on the Program, the distribution of the whole must be on the terms of
this License, whose permissions for other licensees extend to the entire whole,
and thus to each and every part regardless of who wrote it.

Thus, it is not the intent of this section to claim rights or contest your
rights to work written entirely by you; rather, the intent is to exercise the
right to control the distribution of derivative or collective works based on the
Program.

In addition, mere aggregation of another work not based on the Program with the
Program (or with a work based on the Program) on a volume of a storage or
distribution medium does not bring the other work under the scope of this
License.

3. You may copy and distribute the Program (or a work based on it, under Section
2) in object code or executable form under the terms of Sections 1 and 2 above
provided that you also do one of the following:

a) Accompany it with the complete corresponding machine-readable source code,
which must be distributed under the terms of Sections 1 and 2 above on a medium
customarily used for software interchange; or,

b) Accompany it with a written offer, valid for at least three years, to give
any third party, for a charge no more than your cost of physically performing
source distribution, a complete machine-readable copy of the corresponding
source code, to be distributed under the terms of Sections 1 and 2 above on a
medium customarily used for software interchange; or,

c) Accompany it with the information you received as to the offer to distribute
corresponding source code. (This alternative is allowed only for noncommercial
distribution and only if you received the program in object code or executable
form with such an offer, in accord with Subsection b above.)

The source code for a work means the preferred form of the work for making
modifications to it. For an executable work, complete source code means all the
source code for all modules it contains, plus any associated interface
definition files, plus the scripts used to control compilation and installation
of the executable. However, as a special exception, the source code distributed
need not include anything that is normally distributed (in either source or
binary form) with the major components (compiler, kernel, and so on) of the
operating system on which the executable runs, unless that component itself
accompanies the executable.

If distribution of executable or object code is made by offering access to copy
from a designated place, then offering equivalent access to copy the source code
from the same place counts as distribution of the source code, even though third
parties are not compelled to copy the source along with the object code.

4. You may not copy, modify, sublicense, or distribute the Program except as
expressly provided under this License. Any attempt otherwise to copy, modify,
sublicense or distribute the Program is void, and will automatically terminate
your rights under this License. However, parties who have received copies, or
rights, from you under this License will not have their licenses terminated so
long as such parties remain in full compliance.

5. You are not required to accept this License, since you have not signed it.
However, nothing else grants you permission to modify or distribute the Program
or its derivative works. These actions are prohibited by law if you do not
accept this License. Therefore, by modifying or distributing the Program (or any
work based on the Program), you indicate your acceptance of this License to do
so, and all its terms and conditions for copying, distributing or modifying the
Program or works based on it.

6. Each time you redistribute the Program (or any work based on the Program),
the recipient automatically receives a license from the original licensor to
copy, distribute or modify the Program subject to these terms and conditions.
You may not impose any further restrictions on the recipients' exercise of the
rights granted herein. You are not responsible for enforcing compliance by third
parties to this License.

7. If, as a consequence of a court judgment or allegation of patent infringement
or for any other reason (not limited to patent issues), conditions are imposed
on you (whether by court order, agreement or otherwise) that contradict the
conditions of this License, they do not excuse you from the conditions of this
License. If you cannot distribute so as to satisfy simultaneously your
obligations under this License and any other pertinent obligations, then as a
consequence you may not distribute the Program at all. For example, if a patent
license would not permit royalty-free redistribution of the Program by all those
who receive copies directly or indirectly through you, then the only way you
could satisfy both it and this License would be to refrain entirely from
distribution of the Program.

If any portion of this section is held invalid or unenforceable under any
particular circumstance, the balance of the section is intended to apply and the
section as a whole is intended to apply in other circumstances.

It is not the purpose of this section to induce you to infringe any patents or
other property right claims or to contest validity of any such claims; this
section has the sole purpose of protecting the integrity of the free software
distribution system, which is implemented by public license practices. Many
people have made generous contributions to the wide range of software
distributed through that system in reliance on consistent application of that
system; it is up to the author/donor to decide if he or she is willing to
distribute software through any other system and a licensee cannot impose that
choice.

This section is intended to make thoroughly clear what is believed to be a
consequence of the rest of this License.

8. If the distribution and/or use of the Program is restricted in certain
countries either by patents or by copyrighted interfaces, the original copyright
holder who places the Program under this License may add an explicit
geographical distribution limitation excluding those countries, so that
distribution is permitted only in or among countries not thus excluded. In such
case, this License incorporates the limitation as if written in the body of this
License.

9. The Free Software Foundation may publish revised and/or new versions of the
General Public License from time to time. Such new versions will be similar in
spirit to the present version, but may differ in detail to address new problems
or concerns.

Each version is given a distinguishing version number. If the Program specifies
a version number of this License which applies to it and "any later version",
you have the option of following the terms and conditions either of that version
or of any later version published by the Free Software Foundation. If the
Program does not specify a version number of this License, you may choose any
version ever published by the Free Software Foundation.

10. If you wish to incorporate parts of the Program into other free programs
whose distribution conditions are different, write to the author to ask for
permission. For software which is copyrighted by the Free Software Foundation,
write to the Free Software Foundation; we sometimes make exceptions for this.
Our decision will be guided by the two goals of preserving the free status of
all derivatives of our free software and of promoting the sharing and reuse of
software generally.

NO WARRANTY

11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS
NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE
COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM
"AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR
IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE
ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE,
YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR
CORRECTION.

12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED
TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY
WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS
PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES
ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM
(INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY
OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS
BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

END OF TERMS AND CONDITIONS


----------------------------------------------------------------------------

The Artistic License

Preamble

The intent of this document is to state the conditions under which a Package may
be copied, such that the Copyright Holder maintains some semblance of artistic
control over the development of the package, while giving the users of the
package the right to use and distribute the Package in a more-or-less customary
fashion, plus the right to make reasonable modifications.

Definitions:

 - "Package" refers to the collection of files distributed by the Copyright
   Holder, and derivatives of that collection of files created through textual
   modification. 
 - "Standard Version" refers to such a Package if it has not been modified,
   or has been modified in accordance with the wishes of the Copyright
   Holder. 
 - "Copyright Holder" is whoever is named in the copyright or copyrights for
   the package. 
 - "You" is you, if you're thinking about copying or distributing this Package.
 - "Reasonable copying fee" is whatever you can justify on the basis of
   media cost, duplication charges, time of people involved, and so on. (You
   will not be required to justify it to the Copyright Holder, but only to the
   computing community at large as a market that must bear the fee.) 
 - "Freely Available" means that no fee is charged for the item itself, though
   there may be fees involved in handling the item. It also means that
   recipients of the item may redistribute it under the same conditions they
   received it. 

1. You may make and give away verbatim copies of the source form of the Standard
Version of this Package without restriction, provided that you duplicate all of
the original copyright notices and associated disclaimers.

2. You may apply bug fixes, portability fixes and other modifications derived
from the Public Domain or from the Copyright Holder. A Package modified in such
a way shall still be considered the Standard Version.

3. You may otherwise modify your copy of this Package in any way, provided that
you insert a prominent notice in each changed file stating how and when you
changed that file, and provided that you do at least ONE of the following:

     a) place your modifications in the Public Domain or otherwise
     make them Freely Available, such as by posting said modifications
     to Usenet or an equivalent medium, or placing the modifications on
     a major archive site such as ftp.uu.net, or by allowing the
     Copyright Holder to include your modifications in the Standard
     Version of the Package.

     b) use the modified Package only within your corporation or
     organization.

     c) rename any non-standard executables so the names do not
     conflict with standard executables, which must also be provided,
     and provide a separate manual page for each non-standard
     executable that clearly documents how it differs from the Standard
     Version.

     d) make other distribution arrangements with the Copyright Holder.

4. You may distribute the programs of this Package in object code or executable
form, provided that you do at least ONE of the following:

     a) distribute a Standard Version of the executables and library
     files, together with instructions (in the manual page or equivalent)
     on where to get the Standard Version.

     b) accompany the distribution with the machine-readable source of
     the Package with your modifications.

     c) accompany any non-standard executables with their
     corresponding Standard Version executables, giving the
     non-standard executables non-standard names, and clearly
     documenting the differences in manual pages (or equivalent),
     together with instructions on where to get the Standard Version.

     d) make other distribution arrangements with the Copyright Holder.

5. You may charge a reasonable copying fee for any distribution of this Package.
You may charge any fee you choose for support of this Package. You may not
charge a fee for this Package itself. However, you may distribute this Package
in aggregate with other (possibly commercial) programs as part of a larger
(possibly commercial) software distribution provided that you do not advertise
this Package as a product of your own.

6. The scripts and library files supplied as input to or produced as output from
the programs of this Package do not automatically fall under the copyright of
this Package, but belong to whomever generated them, and may be sold
commercially, and may be aggregated with this Package.

7. C or perl subroutines supplied by you and linked into this Package shall not
be considered part of this Package.

8. The name of the Copyright Holder may not be used to endorse or promote
products derived from this software without specific prior written permission.

9. THIS PACKAGE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR
IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR
PURPOSE.

The End

=end license

